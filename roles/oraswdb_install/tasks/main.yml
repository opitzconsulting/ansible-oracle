---
# Some variable have been renamed from upper to lowercase
# The assert is checking for old - not supported - variables
# in inventory to prevent unexpected behavior during installations.
- name: Check for desupported inventory variables
  ansible.builtin.assert:
    fail_msg: Please rename the variable to lowercase in Inventory
    that:
      - disable_EE_options is not defined
      - oracle_EE_options is not defined
      - oracle_EE_options_112 is not defined
      - oracle_EE_options_121 is not defined
      - oracle_EE_options_122 is not defined
      - oracle_EE_options_183 is not defined
      - oracle_EE_options_193 is not defined
      - oracle_EE_options_213 is not defined
  tags:
    - always
    - assert

- name: install_home_db | Mount nfs share with installation media
  ansible.builtin.mount: src="{{ nfs_server_sw }}:{{ nfs_server_sw_path }}" name={{ oracle_stage_remote }} fstype=nfs state=mounted
  when: install_from_nfs
  tags:
    - nfsmountdb

- name: install_home_db | Add oraInst.loc
  ansible.builtin.template: src=oraInst.loc.j2 dest=/etc/oraInst.loc owner={{ oracle_user }} group={{ oracle_group }} mode=644 backup=yes
  tags:
    - orainst

- name: install_home_db | Create common directories
  ansible.builtin.file: dest={{ item.name }} mode={{ item.mode }} owner={{ item.owner }} group={{ item.group }} state=directory
  with_items: "{{ oracle_directories }}"
  tags:
    - directoriesdb

- name: install_home_db | Create stage directory (version specific)
  ansible.builtin.file: dest={{ oracle_stage }}/{{ db_version }} mode=775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
  with_items:
    - "{{ db_homes_installed }}"
  run_once: "{{ configure_cluster }}"
  when: db_homes_installed is defined  and item.state|lower == 'present'
  tags:
    - directoriesdb

- name: install_home_db | Create ORACLE_HOME directory
  ansible.builtin.file: dest={{ oracle_home_db }} mode=0775 owner={{ oracle_user }} group={{ oracle_group }} state=directory
  with_items: "{{ db_homes_installed }}"
  when: db_homes_config[item.home] is defined and item.state|lower == 'present'
  tags:
    - directoriesdb

- ansible.builtin.include_tasks: "{{ www_download_bin }}.yml"
  when: not is_sw_source_local and oracle_sw_copy

- name: install_home_db | Transfer oracle installfiles to server (local)
  ansible.builtin.copy:
    src: "{{ oracle_sw_source_local }}/{{ db_homes_config[item[1].home].imagename | default(item[0].filename) }}"
    dest: "{{ oracle_stage }}"
    mode: 0775
    force: false
  with_nested:
    - "{{ oracle_sw_image_db }}"
    - "{{ db_homes_installed }}"
  become: true
  become_user: "{{ oracle_user }}"
  run_once: "{{ configure_cluster }}"
  when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present' and is_sw_source_local and oracle_sw_copy
  tags:
    - oradbsw

#
# - name: install_home_db | Extract files to stage-area
#   unarchive:
#       src={{ oracle_stage }}/{{ item[0].filename }}
#       dest={{ oracle_stage }}/{{ item[0].version }}
#       copy=no
#       creates="{{ oracle_stage }}/{{ item[0].version }}/{{ item[0].creates }}"
#   with_nested:
#     - "{{ oracle_sw_image_db }}"
#     - "{{ db_homes_installed }}"
#   become: true
#   become_user: "{{ oracle_user }}"
#   run_once: "{{ configure_cluster }}"
#   when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present' and oracle_sw_copy and oracle_sw_unpack
#   tags:
#     - oradbswunpack
#
# - name: install_home_db | Extract files to stage-area (from remote location)
#   unarchive:
#       src={{ oracle_stage_remote }}/{{ item[0].filename }}
#       dest={{ oracle_stage }}/{{ item[0].version }}
#       copy=no
#       creates="{{ oracle_stage }}/{{ item[0].version }}/{{ item[0].creates }}"
#   with_nested:
#     - "{{ oracle_sw_image_db }}"
#     - "{{ db_homes_installed }}"
#   become: true
#   become_user: "{{ oracle_user }}"
#   run_once: "{{ configure_cluster }}"
#   when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present'  and not oracle_sw_copy and oracle_sw_unpack
#   tags:
#     - oradbswunpack

- ansible.builtin.include_tasks: install-home-db.yml
  with_items:
    - "{{ db_homes_installed }}"
  loop_control:
    loop_var: dbh
  when: db_homes_installed is defined and dbh.state|lower == 'present'
  tags: oradbinstall,dbchopt

- name: install_home_db | Unmount nfs share with installation media
  ansible.builtin.mount: src="{{ nfs_server_sw }}:{{ nfs_server_sw_path }}" name={{ oracle_stage_remote }} fstype=nfs state=absent
  when: install_from_nfs
  tags:
    - nfsunmountdb

- name: install_home_db | copy start/stop script for autostart
  ansible.builtin.copy:
    dest: /usr/local/bin
    src: manage_oracle_rdbms_procs.sh
    mode: 0755
  tags: autostartup_service

- ansible.builtin.include_tasks: "{{ hostinitdaemon }}.yml"
  when: autostartup_service
  tags:
    - autostartup_service
    - always
